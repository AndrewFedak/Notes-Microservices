
apiVersion: apps/v1
kind: Deployment
metadata:
  name: users-db-deployment
  namespace: notes
spec:
  replicas: 1
  selector:
    matchLabels:
      app: users-db
  template:
    metadata:
      labels:
        app: users-db
    spec:
      containers:
      - name: users
        image: mongo
        ports:
        - containerPort: 27017
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          value: "mongoadmin"
        - name: MONGO_INITDB_ROOT_PASSWORD
          value: "bdung"
---
apiVersion: v1
kind: Service
metadata:
  name: users-db
  namespace: notes
spec:
  selector:
    app: users-db
  ports:
    - protocol: TCP
      port: 27017
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: users-deployment
  namespace: notes
spec:
  replicas: 3 # was 1
  selector:
    matchLabels:
      app: users
  template:
    metadata:
      labels:
        app: users
    spec:
      containers:
      - name: users
        image: andrewfedak/users-app:latest
        env:
        - name: MONGO_DB_NAME
          value: "nodegmp"
        - name: MONGO_USER
          value: "mongoadmin"
        - name: MONGO_PASSWORD
          value: "bdung"
        - name: MONGO_HOST
          value: "users-db" # local mapping within namespace to (name: users-db) Service by Kubernetes DNS record
        - name: MONGO_PORT
          value: "27017"
        - name: PORT
          value: "80"
        - name: TOKEN_KEY
          value: "some_secret_key123"
        ports:
        - containerPort: 80
        volumeMounts:
        - name: logs-volume
          mountPath: /app/logs
      volumes:
      - name: logs-volume
        persistentVolumeClaim:
          claimName: users-logs-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: users
  namespace: notes
spec:
  selector:
    app: users
  ports:
    - protocol: TCP
      port: 80